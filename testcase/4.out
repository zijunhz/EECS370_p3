instruction memory:
	instrMem[ 0 ]	= 0x00810007	= 8454151	= lw 0 1 7
	instrMem[ 1 ]	= 0x00090002	= 589826	= add 1 1 2
	instrMem[ 2 ]	= 0x00830008	= 8585224	= lw 0 3 8
	instrMem[ 3 ]	= 0x000b0004	= 720900	= add 1 3 4
	instrMem[ 4 ]	= 0x00850009	= 8716297	= lw 0 5 9
	instrMem[ 5 ]	= 0x002a0007	= 2752519	= add 5 2 7
	instrMem[ 6 ]	= 0x01800000	= 25165824	= halt
	instrMem[ 7 ]	= 0x00000001	= 1	= add 0 0 1
	instrMem[ 8 ]	= 0x00000003	= 3	= add 0 0 3
	instrMem[ 9 ]	= 0x00000005	= 5	= add 0 0 5

@@@
state before cycle 0 starts:
	pc = 0
	data memory:
		dataMem[ 0 ] = 8454151
		dataMem[ 1 ] = 589826
		dataMem[ 2 ] = 8585224
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 8716297
		dataMem[ 5 ] = 2752519
		dataMem[ 6 ] = 25165824
		dataMem[ 7 ] = 1
		dataMem[ 8 ] = 3
		dataMem[ 9 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
	[[Detector: -1, -1, -1 | LW: 0]]
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 1 starts:
	pc = 1
	data memory:
		dataMem[ 0 ] = 8454151
		dataMem[ 1 ] = 589826
		dataMem[ 2 ] = 8585224
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 8716297
		dataMem[ 5 ] = 2752519
		dataMem[ 6 ] = 25165824
		dataMem[ 7 ] = 1
		dataMem[ 8 ] = 3
		dataMem[ 9 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8454151 ( lw 0 1 7 )
		pcPlus1 = 1
	[[Detector: -1, -1, -1 | LW: 0]]
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 2 starts:
	pc = 2
	data memory:
		dataMem[ 0 ] = 8454151
		dataMem[ 1 ] = 589826
		dataMem[ 2 ] = 8585224
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 8716297
		dataMem[ 5 ] = 2752519
		dataMem[ 6 ] = 25165824
		dataMem[ 7 ] = 1
		dataMem[ 8 ] = 3
		dataMem[ 9 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 589826 ( add 1 1 2 )
		pcPlus1 = 2
	[[Detector: 1, -1, -1 | LW: 1]]
	ID/EX pipeline register:
		instruction = 8454151 ( lw 0 1 7 )
		pcPlus1 = 1
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 7
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 3 starts:
	pc = 2
	data memory:
		dataMem[ 0 ] = 8454151
		dataMem[ 1 ] = 589826
		dataMem[ 2 ] = 8585224
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 8716297
		dataMem[ 5 ] = 2752519
		dataMem[ 6 ] = 25165824
		dataMem[ 7 ] = 1
		dataMem[ 8 ] = 3
		dataMem[ 9 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 589826 ( add 1 1 2 )
		pcPlus1 = 2
	[[Detector: 2, 1, -1 | LW: 0]]
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 1 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 7 (Don't Care)
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 8454151 ( lw 0 1 7 )
		branchTarget 8 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 7
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 4 starts:
	pc = 3
	data memory:
		dataMem[ 0 ] = 8454151
		dataMem[ 1 ] = 589826
		dataMem[ 2 ] = 8585224
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 8716297
		dataMem[ 5 ] = 2752519
		dataMem[ 6 ] = 25165824
		dataMem[ 7 ] = 1
		dataMem[ 8 ] = 3
		dataMem[ 9 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8585224 ( lw 0 3 8 )
		pcPlus1 = 3
	[[Detector: 2, 2, 1 | LW: 0]]
	ID/EX pipeline register:
		instruction = 589826 ( add 1 1 2 )
		pcPlus1 = 2
		readRegA = 0
		readRegB = 0
		offset = 2 (Don't Care)
	[[Hazard: 0xc]]
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 8 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 7 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8454151 ( lw 0 1 7 )
		writeData = 1
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 5 starts:
	pc = 4
	data memory:
		dataMem[ 0 ] = 8454151
		dataMem[ 1 ] = 589826
		dataMem[ 2 ] = 8585224
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 8716297
		dataMem[ 5 ] = 2752519
		dataMem[ 6 ] = 25165824
		dataMem[ 7 ] = 1
		dataMem[ 8 ] = 3
		dataMem[ 9 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 720900 ( add 1 3 4 )
		pcPlus1 = 4
	[[Detector: 3, 2, 2 | LW: 1]]
	ID/EX pipeline register:
		instruction = 8585224 ( lw 0 3 8 )
		pcPlus1 = 3
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 8
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 589826 ( add 1 1 2 )
		branchTarget 4 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 2
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 1 (Don't Care)
	WB/END pipeline register:
		instruction = 8454151 ( lw 0 1 7 )
		writeData = 1
end state

@@@
state before cycle 6 starts:
	pc = 4
	data memory:
		dataMem[ 0 ] = 8454151
		dataMem[ 1 ] = 589826
		dataMem[ 2 ] = 8585224
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 8716297
		dataMem[ 5 ] = 2752519
		dataMem[ 6 ] = 25165824
		dataMem[ 7 ] = 1
		dataMem[ 8 ] = 3
		dataMem[ 9 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 720900 ( add 1 3 4 )
		pcPlus1 = 4
	[[Detector: 4, 3, 2 | LW: 0]]
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 3 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 8 (Don't Care)
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 8585224 ( lw 0 3 8 )
		branchTarget 11 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 8
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 589826 ( add 1 1 2 )
		writeData = 2
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 1 (Don't Care)
end state

@@@
state before cycle 7 starts:
	pc = 5
	data memory:
		dataMem[ 0 ] = 8454151
		dataMem[ 1 ] = 589826
		dataMem[ 2 ] = 8585224
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 8716297
		dataMem[ 5 ] = 2752519
		dataMem[ 6 ] = 25165824
		dataMem[ 7 ] = 1
		dataMem[ 8 ] = 3
		dataMem[ 9 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 2
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8716297 ( lw 0 5 9 )
		pcPlus1 = 5
	[[Detector: 4, 4, 3 | LW: 0]]
	ID/EX pipeline register:
		instruction = 720900 ( add 1 3 4 )
		pcPlus1 = 4
		readRegA = 1
		readRegB = 0
		offset = 4 (Don't Care)
	[[Hazard: 0x8]]
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 11 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 8 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8585224 ( lw 0 3 8 )
		writeData = 3
	WB/END pipeline register:
		instruction = 589826 ( add 1 1 2 )
		writeData = 2
end state

@@@
state before cycle 8 starts:
	pc = 6
	data memory:
		dataMem[ 0 ] = 8454151
		dataMem[ 1 ] = 589826
		dataMem[ 2 ] = 8585224
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 8716297
		dataMem[ 5 ] = 2752519
		dataMem[ 6 ] = 25165824
		dataMem[ 7 ] = 1
		dataMem[ 8 ] = 3
		dataMem[ 9 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 2
		reg[ 3 ] = 3
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 2752519 ( add 5 2 7 )
		pcPlus1 = 6
	[[Detector: 5, 4, 4 | LW: 1]]
	ID/EX pipeline register:
		instruction = 8716297 ( lw 0 5 9 )
		pcPlus1 = 5
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 9
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 720900 ( add 1 3 4 )
		branchTarget 8 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 4
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 3 (Don't Care)
	WB/END pipeline register:
		instruction = 8585224 ( lw 0 3 8 )
		writeData = 3
end state

@@@
state before cycle 9 starts:
	pc = 6
	data memory:
		dataMem[ 0 ] = 8454151
		dataMem[ 1 ] = 589826
		dataMem[ 2 ] = 8585224
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 8716297
		dataMem[ 5 ] = 2752519
		dataMem[ 6 ] = 25165824
		dataMem[ 7 ] = 1
		dataMem[ 8 ] = 3
		dataMem[ 9 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 2
		reg[ 3 ] = 3
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 2752519 ( add 5 2 7 )
		pcPlus1 = 6
	[[Detector: 7, 5, 4 | LW: 0]]
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 5 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 9 (Don't Care)
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 8716297 ( lw 0 5 9 )
		branchTarget 14 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 9
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 720900 ( add 1 3 4 )
		writeData = 4
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 3 (Don't Care)
end state

@@@
state before cycle 10 starts:
	pc = 7
	data memory:
		dataMem[ 0 ] = 8454151
		dataMem[ 1 ] = 589826
		dataMem[ 2 ] = 8585224
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 8716297
		dataMem[ 5 ] = 2752519
		dataMem[ 6 ] = 25165824
		dataMem[ 7 ] = 1
		dataMem[ 8 ] = 3
		dataMem[ 9 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 2
		reg[ 3 ] = 3
		reg[ 4 ] = 4
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 25165824 ( halt )
		pcPlus1 = 7
	[[Detector: 7, 7, 5 | LW: 0]]
	ID/EX pipeline register:
		instruction = 2752519 ( add 5 2 7 )
		pcPlus1 = 6
		readRegA = 0
		readRegB = 2
		offset = 7 (Don't Care)
	[[Hazard: 0x4]]
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 14 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 9 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8716297 ( lw 0 5 9 )
		writeData = 5
	WB/END pipeline register:
		instruction = 720900 ( add 1 3 4 )
		writeData = 4
end state

@@@
state before cycle 11 starts:
	pc = 8
	data memory:
		dataMem[ 0 ] = 8454151
		dataMem[ 1 ] = 589826
		dataMem[ 2 ] = 8585224
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 8716297
		dataMem[ 5 ] = 2752519
		dataMem[ 6 ] = 25165824
		dataMem[ 7 ] = 1
		dataMem[ 8 ] = 3
		dataMem[ 9 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 2
		reg[ 3 ] = 3
		reg[ 4 ] = 4
		reg[ 5 ] = 5
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1 ( add 0 0 1 )
		pcPlus1 = 8
	[[Detector: -1, 7, 7 | LW: 0]]
	ID/EX pipeline register:
		instruction = 25165824 ( halt )
		pcPlus1 = 7
		readRegA = 0 (Don't Care)
		readRegB = 2 (Don't Care)
		offset = 0 (Don't Care)
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 2752519 ( add 5 2 7 )
		branchTarget 13 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 7
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 5 (Don't Care)
	WB/END pipeline register:
		instruction = 8716297 ( lw 0 5 9 )
		writeData = 5
end state

@@@
state before cycle 12 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 8454151
		dataMem[ 1 ] = 589826
		dataMem[ 2 ] = 8585224
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 8716297
		dataMem[ 5 ] = 2752519
		dataMem[ 6 ] = 25165824
		dataMem[ 7 ] = 1
		dataMem[ 8 ] = 3
		dataMem[ 9 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 2
		reg[ 3 ] = 3
		reg[ 4 ] = 4
		reg[ 5 ] = 5
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 3 ( add 0 0 3 )
		pcPlus1 = 9
	[[Detector: 1, -1, 7 | LW: 0]]
	ID/EX pipeline register:
		instruction = 1 ( add 0 0 1 )
		pcPlus1 = 8
		readRegA = 0
		readRegB = 0
		offset = 1 (Don't Care)
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 25165824 ( halt )
		branchTarget 7 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 7 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 2752519 ( add 5 2 7 )
		writeData = 7
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 5 (Don't Care)
end state
Machine halted
Total of 13 cycles executed
Final state of machine:

@@@
state before cycle 13 starts:
	pc = 10
	data memory:
		dataMem[ 0 ] = 8454151
		dataMem[ 1 ] = 589826
		dataMem[ 2 ] = 8585224
		dataMem[ 3 ] = 720900
		dataMem[ 4 ] = 8716297
		dataMem[ 5 ] = 2752519
		dataMem[ 6 ] = 25165824
		dataMem[ 7 ] = 1
		dataMem[ 8 ] = 3
		dataMem[ 9 ] = 5
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 2
		reg[ 3 ] = 3
		reg[ 4 ] = 4
		reg[ 5 ] = 5
		reg[ 6 ] = 0
		reg[ 7 ] = 7
	IF/ID pipeline register:
		instruction = 5 ( add 0 0 5 )
		pcPlus1 = 10
	[[Detector: 3, 1, -1 | LW: 0]]
	ID/EX pipeline register:
		instruction = 3 ( add 0 0 3 )
		pcPlus1 = 9
		readRegA = 0
		readRegB = 0
		offset = 3 (Don't Care)
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 1 ( add 0 0 1 )
		branchTarget 9 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 25165824 ( halt )
		writeData = 7 (Don't Care)
	WB/END pipeline register:
		instruction = 2752519 ( add 5 2 7 )
		writeData = 7
end state
