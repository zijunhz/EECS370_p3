instruction memory:
	instrMem[ 0 ]	= 0x00810009	= 8454153	= lw 0 1 9
	instrMem[ 1 ]	= 0x0082000a	= 8519690	= lw 0 2 10
	instrMem[ 2 ]	= 0x01c00000	= 29360128	= noop
	instrMem[ 3 ]	= 0x01c00000	= 29360128	= noop
	instrMem[ 4 ]	= 0x000a0003	= 655363	= add 1 2 3
	instrMem[ 5 ]	= 0x001b0006	= 1769478	= add 3 3 6
	instrMem[ 6 ]	= 0x001e0005	= 1966085	= add 3 6 5
	instrMem[ 7 ]	= 0x00360007	= 3538951	= add 6 6 7
	instrMem[ 8 ]	= 0x01800000	= 25165824	= halt
	instrMem[ 9 ]	= 0x00000001	= 1	= add 0 0 1
	instrMem[ 10 ]	= 0x00000002	= 2	= add 0 0 2

@@@
state before cycle 0 starts:
	pc = 0
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 29360128
		dataMem[ 3 ] = 29360128
		dataMem[ 4 ] = 655363
		dataMem[ 5 ] = 1769478
		dataMem[ 6 ] = 1966085
		dataMem[ 7 ] = 3538951
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 2
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
	[[Detector: -1, -1, -1 | LW: 0]]
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 1 starts:
	pc = 1
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 29360128
		dataMem[ 3 ] = 29360128
		dataMem[ 4 ] = 655363
		dataMem[ 5 ] = 1769478
		dataMem[ 6 ] = 1966085
		dataMem[ 7 ] = 3538951
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 2
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8454153 ( lw 0 1 9 )
		pcPlus1 = 1
	[[Detector: -1, -1, -1 | LW: 0]]
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 2 starts:
	pc = 2
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 29360128
		dataMem[ 3 ] = 29360128
		dataMem[ 4 ] = 655363
		dataMem[ 5 ] = 1769478
		dataMem[ 6 ] = 1966085
		dataMem[ 7 ] = 3538951
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 2
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8519690 ( lw 0 2 10 )
		pcPlus1 = 2
	[[Detector: 1, -1, -1 | LW: 1]]
	ID/EX pipeline register:
		instruction = 8454153 ( lw 0 1 9 )
		pcPlus1 = 1
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 9
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 3 starts:
	pc = 3
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 29360128
		dataMem[ 3 ] = 29360128
		dataMem[ 4 ] = 655363
		dataMem[ 5 ] = 1769478
		dataMem[ 6 ] = 1966085
		dataMem[ 7 ] = 3538951
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 2
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 2 (Don't Care)
	[[Detector: 2, 1, -1 | LW: 1]]
	ID/EX pipeline register:
		instruction = 8519690 ( lw 0 2 10 )
		pcPlus1 = 2
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 10
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 8454153 ( lw 0 1 9 )
		branchTarget 10 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 9
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 4 starts:
	pc = 4
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 29360128
		dataMem[ 3 ] = 29360128
		dataMem[ 4 ] = 655363
		dataMem[ 5 ] = 1769478
		dataMem[ 6 ] = 1966085
		dataMem[ 7 ] = 3538951
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 2
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 2 (Don't Care)
	[[Detector: -1, 2, 1 | LW: 0]]
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 2 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 8519690 ( lw 0 2 10 )
		branchTarget 12 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 10
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8454153 ( lw 0 1 9 )
		writeData = 1
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 5 starts:
	pc = 5
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 29360128
		dataMem[ 3 ] = 29360128
		dataMem[ 4 ] = 655363
		dataMem[ 5 ] = 1769478
		dataMem[ 6 ] = 1966085
		dataMem[ 7 ] = 3538951
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 2
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 655363 ( add 1 2 3 )
		pcPlus1 = 5
	[[Detector: -1, -1, 2 | LW: 0]]
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 2 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 2 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 10 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8519690 ( lw 0 2 10 )
		writeData = 2
	WB/END pipeline register:
		instruction = 8454153 ( lw 0 1 9 )
		writeData = 1
end state

@@@
state before cycle 6 starts:
	pc = 6
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 29360128
		dataMem[ 3 ] = 29360128
		dataMem[ 4 ] = 655363
		dataMem[ 5 ] = 1769478
		dataMem[ 6 ] = 1966085
		dataMem[ 7 ] = 3538951
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 2
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 2
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1769478 ( add 3 3 6 )
		pcPlus1 = 6
	[[Detector: 3, -1, -1 | LW: 0]]
	ID/EX pipeline register:
		instruction = 655363 ( add 1 2 3 )
		pcPlus1 = 5
		readRegA = 1
		readRegB = 0
		offset = 3 (Don't Care)
	[[Hazard: 0x20]]
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 2 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 10 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 2 (Don't Care)
	WB/END pipeline register:
		instruction = 8519690 ( lw 0 2 10 )
		writeData = 2
end state

@@@
state before cycle 7 starts:
	pc = 7
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 29360128
		dataMem[ 3 ] = 29360128
		dataMem[ 4 ] = 655363
		dataMem[ 5 ] = 1769478
		dataMem[ 6 ] = 1966085
		dataMem[ 7 ] = 3538951
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 2
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 2
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1966085 ( add 3 6 5 )
		pcPlus1 = 7
	[[Detector: 6, 3, -1 | LW: 0]]
	ID/EX pipeline register:
		instruction = 1769478 ( add 3 3 6 )
		pcPlus1 = 6
		readRegA = 0
		readRegB = 0
		offset = 6 (Don't Care)
	[[Hazard: 0x3]]
	EX/MEM pipeline register:
		instruction = 655363 ( add 1 2 3 )
		branchTarget 8 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 3
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 2 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 2 (Don't Care)
end state

@@@
state before cycle 8 starts:
	pc = 8
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 29360128
		dataMem[ 3 ] = 29360128
		dataMem[ 4 ] = 655363
		dataMem[ 5 ] = 1769478
		dataMem[ 6 ] = 1966085
		dataMem[ 7 ] = 3538951
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 2
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 2
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 3538951 ( add 6 6 7 )
		pcPlus1 = 8
	[[Detector: 5, 6, 3 | LW: 0]]
	ID/EX pipeline register:
		instruction = 1966085 ( add 3 6 5 )
		pcPlus1 = 7
		readRegA = 0
		readRegB = 0
		offset = 5 (Don't Care)
	[[Hazard: 0x6]]
	EX/MEM pipeline register:
		instruction = 1769478 ( add 3 3 6 )
		branchTarget 12 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 6
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 655363 ( add 1 2 3 )
		writeData = 3
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 2 (Don't Care)
end state

@@@
state before cycle 9 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 29360128
		dataMem[ 3 ] = 29360128
		dataMem[ 4 ] = 655363
		dataMem[ 5 ] = 1769478
		dataMem[ 6 ] = 1966085
		dataMem[ 7 ] = 3538951
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 2
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 2
		reg[ 3 ] = 3
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 25165824 ( halt )
		pcPlus1 = 9
	[[Detector: 7, 5, 6 | LW: 0]]
	ID/EX pipeline register:
		instruction = 3538951 ( add 6 6 7 )
		pcPlus1 = 8
		readRegA = 0
		readRegB = 0
		offset = 7 (Don't Care)
	[[Hazard: 0xc]]
	EX/MEM pipeline register:
		instruction = 1966085 ( add 3 6 5 )
		branchTarget 12 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 9
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 1769478 ( add 3 3 6 )
		writeData = 6
	WB/END pipeline register:
		instruction = 655363 ( add 1 2 3 )
		writeData = 3
end state

@@@
state before cycle 10 starts:
	pc = 10
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 29360128
		dataMem[ 3 ] = 29360128
		dataMem[ 4 ] = 655363
		dataMem[ 5 ] = 1769478
		dataMem[ 6 ] = 1966085
		dataMem[ 7 ] = 3538951
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 2
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 2
		reg[ 3 ] = 3
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 6
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1 ( add 0 0 1 )
		pcPlus1 = 10
	[[Detector: -1, 7, 5 | LW: 0]]
	ID/EX pipeline register:
		instruction = 25165824 ( halt )
		pcPlus1 = 9
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 3538951 ( add 6 6 7 )
		branchTarget 15 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 12
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 1966085 ( add 3 6 5 )
		writeData = 9
	WB/END pipeline register:
		instruction = 1769478 ( add 3 3 6 )
		writeData = 6
end state

@@@
state before cycle 11 starts:
	pc = 11
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 29360128
		dataMem[ 3 ] = 29360128
		dataMem[ 4 ] = 655363
		dataMem[ 5 ] = 1769478
		dataMem[ 6 ] = 1966085
		dataMem[ 7 ] = 3538951
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 2
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 2
		reg[ 3 ] = 3
		reg[ 4 ] = 0
		reg[ 5 ] = 9
		reg[ 6 ] = 6
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 2 ( add 0 0 2 )
		pcPlus1 = 11
	[[Detector: 1, -1, 7 | LW: 0]]
	ID/EX pipeline register:
		instruction = 1 ( add 0 0 1 )
		pcPlus1 = 10
		readRegA = 0
		readRegB = 0
		offset = 1 (Don't Care)
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 25165824 ( halt )
		branchTarget 9 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 12 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 3538951 ( add 6 6 7 )
		writeData = 12
	WB/END pipeline register:
		instruction = 1966085 ( add 3 6 5 )
		writeData = 9
end state
Machine halted
Total of 12 cycles executed
Final state of machine:

@@@
state before cycle 12 starts:
	pc = 12
	data memory:
		dataMem[ 0 ] = 8454153
		dataMem[ 1 ] = 8519690
		dataMem[ 2 ] = 29360128
		dataMem[ 3 ] = 29360128
		dataMem[ 4 ] = 655363
		dataMem[ 5 ] = 1769478
		dataMem[ 6 ] = 1966085
		dataMem[ 7 ] = 3538951
		dataMem[ 8 ] = 25165824
		dataMem[ 9 ] = 1
		dataMem[ 10 ] = 2
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 2
		reg[ 3 ] = 3
		reg[ 4 ] = 0
		reg[ 5 ] = 9
		reg[ 6 ] = 6
		reg[ 7 ] = 12
	IF/ID pipeline register:
		instruction = 0 ( add 0 0 0 )
		pcPlus1 = 12
	[[Detector: 2, 1, -1 | LW: 0]]
	ID/EX pipeline register:
		instruction = 2 ( add 0 0 2 )
		pcPlus1 = 11
		readRegA = 0
		readRegB = 0
		offset = 2 (Don't Care)
	[[Hazard: 0x0]]
	EX/MEM pipeline register:
		instruction = 1 ( add 0 0 1 )
		branchTarget 11 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 25165824 ( halt )
		writeData = 12 (Don't Care)
	WB/END pipeline register:
		instruction = 3538951 ( add 6 6 7 )
		writeData = 12
end state
